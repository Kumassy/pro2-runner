#!/usr/bin/env ruby
# coding: utf-8
require "pro2-runner"

module Pro2
  class << self
    def main
      subcommand = ARGV.shift
      print_help if subcommand.nil? || !%(init build execute run lint).include?(subcommand)

      case subcommand
      when "init"
        prefix = ARGV.shift
        num_file = ARGV.shift

        if prefix.nil? || num_file.nil?
          puts "usage: pro2 init <prefix> <num_file>"
          puts "    <prefix>\tX for ProbXY"
          puts "    <num_file>\tlargest Y for ProbXY"
          puts "`pro2 init 2 3` will create these files:"
          puts " - project.yaml"
          puts " - Prob21.java"
          puts " - Prob22.java"
          puts " - Prob23.java"
          exit 1
        end
        Pro2::command_init(prefix.to_i, num_file.to_i)
      when "build"
        Pro2::command_build(ARGV.shift)
      when "execute"
        Pro2::command_execute(ARGV.shift)
      when "run"
        Pro2::command_run(ARGV.shift)
      else
        print_help
      end
    end

    def print_help
      puts %{
    usage: pro2 <command> [<args>]

    Following commands are available:
        init   \tCreate an empty Java files and project.yaml
        build  \tBuild Java files based on project.yaml
        execute\tExecute Java files based on project.yaml
        run    \tBuild Java files and run them (equivalent to `pro2 build && pro2 execute`)
    }
      exit 1
    end
    # pro2 init -> generate project.yml
    # pro2 build -> compile entries
    # pro2 execute -> execute entries
    # pro2 run -> compile & execute entries
    # pro2 lint -> linter
  end
end
Pro2::main
